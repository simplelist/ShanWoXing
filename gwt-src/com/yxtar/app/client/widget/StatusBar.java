package com.yxtar.app.client.widget;import com.google.gwt.core.client.GWT;import com.google.gwt.event.dom.client.ClickEvent;import com.google.gwt.event.dom.client.ClickHandler;import com.google.gwt.storage.client.Storage;import com.google.gwt.user.client.Window;import com.google.gwt.user.client.ui.Composite;import com.google.gwt.user.client.ui.FlowPanel;import com.google.gwt.user.client.ui.HorizontalPanel;import com.google.gwt.user.client.ui.Image;import com.google.gwt.user.client.ui.Label;import com.yxtar.app.client.ClientFactory;import com.yxtar.app.client.i18n.MenuConstants;public class StatusBar extends Composite {	private final MenuConstants constants = GWT.create(MenuConstants.class);	// container	private FlowPanel containerPanel = new FlowPanel();	private FlowPanel innerPanel = new FlowPanel();	private FlowPanel body = new FlowPanel();	// menu items	private Image logo = new Image("./image/admin_ext_img/logo_white.png");	private Label logoutLabel = new Label(constants.logout());	private Label wrapLabel = new Label("/");	private Label userLabel = new Label();	private HorizontalPanel langPanel = new HorizontalPanel();	private Label enlbl = new Label("EN");	private Label wraplbl = new Label("/");	private Label znlbl = new Label("??????");	// menu click	private MenuClickListener menuClickListener = null;	private ClientFactory factory;	private Storage storage = null;	public StatusBar() {		this(null);	}	public StatusBar(ClientFactory client) {		this.factory = client;		initWidget(containerPanel);		containerPanel.add(body);		body.add(innerPanel);		// setting style		body.getElement().setAttribute("style", "width: 1024px;max-width: 1024px;min-width: 1024px;margin: 0 auto;padding:13px 0;background-image:url('./admin_ext_img/head_bg.png')");		innerPanel.getElement().setAttribute("style", "width:942px;min-width:942px;max-width:942px;");		innerPanel.getElement().addClassName("inner-panel");		logoutLabel.getElement().addClassName("user");		logo.getElement().addClassName("logo");		userLabel.getElement().addClassName("user");		wrapLabel.getElement().addClassName("wrap");		logoutLabel.getElement().setAttribute("style", "cursor:pointer;");		langPanel.getElement().setAttribute("style", "margin-top:15px;");		enlbl.getElement().setAttribute("style", "width: 20px;color:#fff;cursor:pointer;");		wraplbl.getElement().setAttribute("style", "width:20px;text-align:center;color:#fff;");		znlbl.getElement().setAttribute("style", "width: 40px;color:#fff;cursor:pointer;font-size:13px;");		// add menu items		innerPanel.add(logo);		innerPanel.add(logoutLabel);		innerPanel.add(userLabel);		innerPanel.add(langPanel);		langPanel.add(enlbl);		langPanel.add(wraplbl);		langPanel.add(znlbl);		storage=Storage.getLocalStorageIfSupported();		// display user name//		if (client.getUserMap()!=null&&client.getUserMap().getuId()!=null) {//			userLabel.setText(client.getUserMap().getuName()+" "+client.getUserMap().getuSurName());//		}//		// click logout link,logout//		logoutLabel.addClickHandler(new ClickHandler() {////			@Override//			public void onClick(ClickEvent event) {////				try {//					storage.removeItem(Environment.adminuserInfo);//					storage.removeItem(Environment.adminuserDateInfo);//				} catch (Exception e) {//					e.printStackTrace();//				}//				factory.getAdminExtRpcRequestor().userSvc.cleanSession(new AsyncCallback<Void>() {////					@Override//					public void onSuccess(Void result) {//						Window.Location.assign(Environment.contextPath+"/adminext.html");//					}////					@Override//					public void onFailure(Throwable caught) {//						Window.Location.assign(Environment.contextPath+"/adminextlogin.html");//					}//				});////////			}//		});		// display menu list		logo.addClickHandler(new ClickHandler() {			@Override			public void onClick(ClickEvent event) {				if (menuClickListener != null) {					menuClickListener.onClick();				}			}		});		if (Window.Location.getHref().contains("?locale=zh_CN")) {			znlbl.addStyleName("currentLanguage");			enlbl.removeStyleName("currentLanguage");		}else {			znlbl.removeStyleName("currentLanguage");			enlbl.addStyleName("currentLanguage");		}		enlbl.addClickHandler(new ClickHandler() {			@Override			public void onClick(ClickEvent event) {				if(!Window.Location.getHref().contains("?locale=en")){					if(Window.Location.getHref().contains("#")){						String oldhref = Window.Location.getHref();						String newhref = "";						if(Window.Location.getHref().contains("?locale=zh_CN")){							newhref = oldhref.replace("?locale=zh_CN", "");						}else{							newhref = oldhref;						} 						String [] str = newhref.split("#");						String url = str[0]+"?locale=en"+"#"+str[1];						Window.Location.assign(url);					}else{						String oldhref = Window.Location.getHref();						String newhref = "";						if(Window.Location.getHref().contains("?locale=zh_CN")){							newhref = oldhref.replace("?locale=zh_CN", "?locale=en");						}else{							newhref = oldhref+"?locale=en";						}						Window.Location.assign(newhref);					}				}			}		});		znlbl.addClickHandler(new ClickHandler() {			@Override			public void onClick(ClickEvent event) {				if(!Window.Location.getHref().contains("?locale=zh_CN")){					if(Window.Location.getHref().contains("#")){						String oldhref = Window.Location.getHref();						String newhref = "";						if(Window.Location.getHref().contains("?locale=en")){							newhref = oldhref.replace("?locale=en", "");						}else{							newhref = oldhref;						} 						String [] str = newhref.split("#");						String url = str[0]+"?locale=zh_CN"+"#"+str[1];						Window.Location.assign(url);					}else{						String oldhref = Window.Location.getHref();						String newhref = "";						if(Window.Location.getHref().contains("?locale=en")){							newhref = oldhref.replace("?locale=en", "?locale=zh_CN");						}else{							newhref = oldhref+"?locale=zh_CN";						}						Window.Location.assign(newhref);					}				}			}		});	}	public MenuClickListener getMenuClickLister() {		return menuClickListener;	}	public void setMenuClickLister(MenuClickListener menuClickLister) {		this.menuClickListener = menuClickLister;	}	interface MenuClickListener {		public void onClick();	}}