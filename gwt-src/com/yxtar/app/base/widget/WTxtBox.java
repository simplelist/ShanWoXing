package com.yxtar.app.base.widget;import com.google.gwt.dom.client.Style.Unit;import com.google.gwt.user.client.ui.Composite;import com.google.gwt.user.client.ui.FlowPanel;import com.google.gwt.user.client.ui.Label;import com.google.gwt.user.client.ui.TextBox;/** * Similar to Ytextboxï¼ŒThis is an enhanced version * @author wufeng *  */public abstract class WTxtBox extends Composite implements EditWidgetInterface {	protected FlowPanel containerFlowPanel = new FlowPanel();	private TextBox inputBox = new TextBox();	private Label displayValue = new Label();	private boolean isProtected = false;	public WTxtBox() {			}	public WTxtBox(String width, Integer height) {		containerFlowPanel.add(inputBox);		containerFlowPanel.add(displayValue);		displayValue.setVisible(isProtected);		containerFlowPanel.setSize(width, height + Unit.PX.getType());		inputBox.setSize(width , height - 2 + Unit.PX.getType());		displayValue.setSize(width , height + Unit.PX.getType());		inputBox.setStylePrimaryName("input-box-default");		displayValue.setStylePrimaryName("label-box-default");	}	public void setSize(Integer width, Integer height) {		containerFlowPanel.setSize(width+"", height + Unit.PX.getType());		inputBox.setSize(width+"" , height - 2 + Unit.PX.getType());		displayValue.setSize(width +"", height + Unit.PX.getType());	}	public void addInputBoxStyle(String style) {		inputBox.addStyleName(style);	}	public void addLabelStyle(String style) {		displayValue.addStyleName(style);	}	public TextBox getInputBox(){		return this.inputBox;	}	/**	 * get display value	 */	@Override	public String getContent() {		return inputBox.getText();	}	/**	 * display content value	 */	@Override	public void setContent(String content) {		if(content!="null"||!content.equals("null")){			inputBox.setText(content);			displayValue.setText(content);		}	}	public void initializeBox(){		inputBox.setText("");	}	/**	 * true : display label ,false :display input box	 */	@Override	public void setProtected(boolean flag) {		this.isProtected = flag;		String content = getContent();		displayValue.setVisible(isProtected);		inputBox.setVisible(!isProtected);		setContent(content);	}	public void readOnly(){		inputBox.setReadOnly(true);	}		public class WTxtBoxImpl extends WTxtBox {		public WTxtBoxImpl() {			super();			initWidget(containerFlowPanel);		}		public WTxtBoxImpl(String width, Integer height) {			super(width, height);			initWidget(containerFlowPanel);		}	}}